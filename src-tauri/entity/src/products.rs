//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "products")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub name: String,
    pub created_at: String,
    pub description: Option<String>,
    #[sea_orm(column_type = "Double")]
    pub price: f64,
    #[sea_orm(column_type = "Double")]
    pub min_quantity: f64,
    pub image: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::invoice_items::Entity")]
    InvoiceItems,
    #[sea_orm(has_many = "super::order_items::Entity")]
    OrderItems,
    #[sea_orm(has_many = "super::quote_items::Entity")]
    QuoteItems,
}

impl Related<super::invoice_items::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::InvoiceItems.def()
    }
}

impl Related<super::order_items::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OrderItems.def()
    }
}

impl Related<super::quote_items::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::QuoteItems.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
